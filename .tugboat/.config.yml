services:
  php:
    # Use PHP 8.x with Apache; this syntax pulls in the latest version of PHP 8
    image: tugboatqa/php:8.1-apache

    # Set this as the default service. This does a few things
    #   1. Clones the git repository into the service container
    #   2. Exposes port 80 to the Tugboat HTTP proxy
    #   3. Routes requests to the preview URL to this service
    default: true
    # Wait until the mysql service is done building
    depends:
      - mysql
      - browser

    # A set of commands to run while building this service
    commands:
      # Commands that set up the basic preview infrastructure
      init:
        - echo "===== init"
        # Install apache and mod-rewrite.
        - docker-php-ext-install opcache
        - a2enmod headers rewrite
        # Add some tools.
        - apt-get update && apt-get -y install libzip-dev libicu-dev npm nano screen
        - docker-php-ext-install zip
        - docker-php-ext-configure exif
        - docker-php-ext-install exif
        - docker-php-ext-install intl
        - docker-php-ext-configure gd --with-jpeg --with-freetype
        - docker-php-ext-install gd
        - composer self-update --2

        # Install drush-launcher, if desired.
        - wget -O /usr/local/bin/drush https://github.com/drush-ops/drush-launcher/releases/download/0.6.0/drush.phar
        - chmod +x /usr/local/bin/drush

        # A common practice in many Drupal projects is to store the config and
        # private files outside of the Drupal root. If that's the case for your
        # project, you can either specify the absolute paths to those
        # directories in your settings.local.php, or you can symlink them in
        # here. Here is an example of the latter option:
        #- ln -snf "${TUGBOAT_ROOT}/config" "${DOCROOT}/../config"
        #- ln -snf "${TUGBOAT_ROOT}/files-private" "${DOCROOT}/../files-private"

        # Increase php memory limit to 256M.
        - echo "memory_limit = 256M" >> /usr/local/etc/php/conf.d/my-php.ini

        # enable display errors.
        - echo "display_errors = On" >> /usr/local/etc/php/conf.d/my-php.ini

        # Enable colored terminal and some aliases.
        - sed -e '9,13 s/#//' -i ~/.bashrc
        - sed -e '16,19 s/#//' -i ~/.bashrc

      # Commands that import files, databases,  or other assets. When an
      # existing preview is refreshed, the build workflow starts here,
      # skipping the init step, because the results of that step will
      # already be present.
      update:
        - echo "===== update"

        # Install/update packages managed by composer, including drush.
        - rm -rf vendor/ web/modules/contrib/ web/core/
        - composer self-update --2
        - composer update --optimize-autoloader

        # Alternatively, another common practice is to use the
        # stage_file_proxy Drupal module. This module lets Drupal serve
        # files from another publicly-accessible Drupal site instead of
        # syncing the entire files directory into the Tugboat Preview.
        # This results in smaller previews and reduces the build time.
        - drush pm:enable --yes stage_file_proxy
        - drush config:set --yes stage_file_proxy.settings origin "https://www.performantlabs.com"

        # Set file permissions such that Drupal will not complain
        - mkdir -p "${DOCROOT}/sites/default/files"
        - chgrp -R www-data "${DOCROOT}/sites/default/files"
        - find "${DOCROOT}/sites/default/files" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files" -type f -exec chmod 0664 {} \;
        - mkdir -p "${DOCROOT}/sites/default/files-private"
        - chgrp -R www-data "${DOCROOT}/sites/default/files-private"
        - find "${DOCROOT}/sites/default/files-private" -type d -exec chmod 2775 {} \;
        - find "${DOCROOT}/sites/default/files-private" -type f -exec chmod 0664 {} \;

      # only step that executes on new PR or tugboat builds from base previews
      build:
        - echo "===== build"

        - rm -rf vendor/ docroot/modules/contrib/ docroot/core/
        - composer self-update --2
        - composer update

        - # Use the tugboat-specific Drupal settings.
        - cp "${TUGBOAT_ROOT}/.tugboat/local.settings.php" "${DOCROOT}/sites/default/settings/local.settings.php"

        - cd ${DOCROOT}/themes/idt8 && npm i && npm rebuild node-sass && npm run build
        - ${TUGBOAT_ROOT}/.tugboat/init-sso
        - ${TUGBOAT_ROOT}/scripts/promote-admins.sh
        - drush updb -y --no-post-updates
        - drush cr
        #- drush fra -y --bundle idt
        - drush -y config:import || true
        - drush -y config:import || true
        - drush -y config:import
        - drush cr
        - drush updb -y
        - drush cr
        - ${TUGBOAT_ROOT}/.tugboat/update-jira
        - apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb libxml2-dev
        #- docker-php-ext-install -j$(nproc) xmlrpc
        - touch /var/log/php-error.log && chown www-data:www-data /var/log/php-error.log
        - echo "log_errors = On"  >> /usr/local/etc/php/conf.d/my-php.ini
        - echo "error_log = /var/log/php-error.log" >> /usr/local/etc/php/conf.d/my-php.ini
        - echo "error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT" >> /usr/local/etc/php/conf.d/my-php.ini
        - npm i -D cypress@9.6.1 cypress-grep
        - npm list | grep cypress
        - npm install -g cspell@5.21.2

      # runs once all services are running, runs on rebuild
      online:
        - echo "===== online"
        -
          # AVA: Begin removal of Behat.
          # - cp tests/behat-tugboat.yml tests/behat.yml
          #- mkdir -p ${DOCROOT}/screenshots
          #- sed -e "s@https://idt.docksal@${TUGBOAT_DEFAULT_SERVICE_URL_PROTOCOL}://idtweb:lowjitter\@${TUGBOAT_DEFAULT_SERVICE_URL_HOST}@g" -i tests/behat.yml
          #- mkdir -p ${TUGBOAT_ROOT}/tests/bin
        #- ln -snf ${TUGBOAT_ROOT}/vendor/behat/behat/bin/behat ${TUGBOAT_ROOT}/tests/bin/behat
        - drush cr
        - ${TUGBOAT_ROOT}/scripts/git/quality-checkcode tugboat

      # This is run on clone, but not build
      clone:
        - echo "===== clone"
        - ${TUGBOAT_ROOT}/.tugboat/init-sso
        - ${TUGBOAT_ROOT}/.tugboat/update-jira

    #urls:
    #  # frontpage
    #  - /us/en
    #  - /jp/ja
    #  - /cn/zh
    #  # Product Category
    #  - /us/en/products/interface-connectivity
    #  # Product Subcategory
    #  - /us/en/products/interface-connectivity/pci-express-solutions
    #  # Generic Product
    #  - /us/en/products/interface-connectivity/pci-express-solutions/pci-express-serial-rapidio-bridges/tsi721-rapidio-bridge
    #  # Application Category
    #  - /us/en/application/automotive
    #  # Application
    #  - /us/en/application/automotive/adas
    #  # Press Release
    #  - /us/en/about/press-room/renesas-and-syntiant-develop-voice-controlled-multimodal-ai-solution-combining-advanced-vision-and
    #  # Executive Team
    #  - /us/en/about/executive-team

  mysql:
    image: tugboatqa/percona:5.7

    commands:
      init:
        # Increase the allowed packet size to 512MB.
        - mysql -e "SET GLOBAL max_allowed_packet=2147483648;"
        # Ensure this packet size persists even if MySQL restarts.
        - echo "max_allowed_packet=2147483648" >> /etc/mysql/tugboat.cnf

      update:
        - rm -rf repo && mkdir repo && cd repo && git clone git@bitbucket.org:$TUGBOAT_REPO.git . && git checkout $TUGBOAT_PREVIEW_SHA
        - cd repo && ssh idtd8.stage@idtd8stage.ssh.prod.acquia-sites.com ls -t /home/idtd8/backups/archive/ | grep "^`cat deployment_identifier`" | grep lean | head -n 1
        - cd repo && scp idtd8.stage@idtd8stage.ssh.prod.acquia-sites.com:backups/archive/$(ssh idtd8.stage@idtd8stage.ssh.prod.acquia-sites.com ls -t /home/idtd8/backups/archive/ | grep "^`cat deployment_identifier`" | grep lean | head -n 1) /tmp/database.sql.gz
        - mysql -e "DROP DATABASE IF EXISTS tugboat; CREATE DATABASE tugboat;"
        - zcat /tmp/database.sql.gz | mysql tugboat
        - rm /tmp/database.sql.gz
        - rm -rf /var/lib/repo


  browser:
    # The version that was tested to work. "latest" chrome is always pulled within the image.
    image: selenium/standalone-chrome-debug:3.141.59-xenon
