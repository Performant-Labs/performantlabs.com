{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    'paragraph-id--' ~ paragraph.id(),
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished',
    paragraph.field_content_display.value
  ]
%}

{% block paragraph %}
	<div{{attributes.addClass(classes)}}>
        <div class="img-text-heirarchy-wrapper">
            <div class="container">
              <h2 class="para-title">{{ paragraph.field_heading_text.value }}</h2>
              <div class="row">
                <div class="col-lg-5">
                  <div class="hierarchy-left">
                    <img src="/{{ directory }}/images/production-line.png" class="production-line show" alt="" id="line">
                    <h3 class="path-title">{{ paragraph.field_hierarchy_left_title.value }}</h3>
                    {% for item in paragraph.field_hierarchy_left %}
                      {% set direction = '' %}
                      {% if item.entity.field_alignment.value == 'left' %}
                        {% set direction = 'flex-row' %}
                      {% elseif item.entity.field_alignment.value == 'right' %}
                        {% set direction = 'flex-row-reverse' %}
                      {% endif %}
                      <div class="hierarchy-child d-flex {{ direction }}" data-aos="fade-right">
                        <div class="img"><img src="{{ file_url(item.entity.field_upload_image.entity.uri.value) }}" class="img-fluid"></div>
                        <p class="desc">{{ item.entity.field_description.value }}</p>
                      </div>
                    {% endfor %}

                  </div>
                </div>
                <div class="col-lg-2 separator-line"></div>
                <div class="col-lg-5">
                  <div class="hierarchy-right">
                    <img src="/{{ directory }}/images/right.png" class="production-line show" alt="" id="sline">
                    <h3 class="path-title">{{ paragraph.field_hierarchy_right_title.value }}</h3>
                    {% for item in paragraph.field_hierarchy_right %}
                        {% set direction = '' %}
                        {% if item.entity.field_alignment.value == 'left' %}
                          {% set direction = 'flex-row' %}
                        {% elseif item.entity.field_alignment.value == 'right' %}
                          {% set direction = 'flex-row-reverse' %}
                        {% endif %}
                      <div class="hierarchy-child d-flex {{ direction }}" data-aos="fade-left">
                        <div class="img"><img src="{{ file_url(item.entity.field_upload_image.entity.uri.value) }}" class="img-fluid"></div>
                        <p class="desc">{{ item.entity.field_description.value }}</p>
                      </div>
                    {% endfor %}

                  </div>
                </div>
              </div>
            </div>
        </div>
	</div>
{% endblock paragraph %}
