name: Update package.

on:
  repository_dispatch:
    types: [update-package-command]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  update_package:
    runs-on: ubuntu-latest
    # Do this only if the PR was created by dependabot.
    # if: github.event_name == 'pull_request' && github.event.pull_request.user.login == 'dependabot[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update package depending on PR.
        run: |
          echo "About to update package."
          set -e  # Exit immediately if any command fails.

          PR_TITLE="${{ github.event.client_payload.pull_request.title }}"
          PACKAGE_NAME=$(echo "${PR_TITLE}" | awk '{print $2}')

          # If on the dxpr_builder subproject, update local packages.
          if [[ "${PR_TITLE}" == *"/dxpr_builder/vendor/managed"* ]]; then
            echo "Updating package ${PACKAGE_NAME}."

            # Should already be on a branch created by Dependabot; confirm.
            echo "Current branch is: ${GITHUB_REF#refs/heads/}"

            # Dependabot has updated package.json.
            npm install

            echo "Modified files:"
            git status

            # Add and commit all modified files (not yet).
            #git add .
            #git commit -m "Update ${PACKAGE_NAME} to the latest version."

            echo "IS_DXPR_BUILDER=true" >> $GITHUB_ENV
          else
            echo "IS_DXPR_BUILDER=true" >> $GITHUB_ENV
          fi

      - name: Push changes to GitHub repo.
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: env.IS_DXPR_BUILDER == 'true'

      - name: Call the QA tests.
        uses: ./.github/workflows/qa-demo-2x-bs3-tests-command.yml
