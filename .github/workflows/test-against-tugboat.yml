name: (Test) Run Playwright tests against  Tugboat Preview.
run-name: ${{ github.actor }} is running tests on ${{ github.event.inputs.url }}.
on:
  workflow_dispatch:
    inputs:
      service:
        description: Service ID of php-service of the Tugboat Preview environment
        required: true
      url:
        description: Website URL of the Preview environment
        required: false

env:
  PHP_VERSION: '8.1'
  GITHUB_WORKING_DIR: '/home/runner/work/performantlabs.com/performantlabs.com'

jobs:
  Test-on-Preview:
    env:
      GIT_EMAIL: 'ci-bot@pantheon.io'
      GITHUB_REPOSITORY_URL: ${{ github.repositoryUrl }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GH_PROJECT_USERNAME: ${{ github.repository_owner }}
      GH_PROJECT_REPONAME: ${{ github.repository }}

    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "For site $PANTHEON_SITE_NAME.$PANTHEON_ENV."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Check out repository code.
        uses: actions/checkout@v3

      - name: Change to Github working directory.
        run: |
          cd "$GITHUB_WORKING_DIR"
          pwd

      # Install node after checking out repo to get access to package.json.
      - name: 'Set up Node.'
        uses: actions/setup-node@v3
        with:
          node-version: '19'
          cache: 'npm'

      - name: 'Install NPM dependencies'
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: List the directories in the project (x1).
        run: |
          tree -d -L 3

      - name: Install Tugboat.
        run: |
          set -x
          curl -O https://dashboard.tugboatqa.com/cli/linux/tugboat.tar.gz
          tar -zxf tugboat.tar.gz
          echo token: ${{ secrets.TUGBOAT_TOKEN }} > ~/.tugboat.yml

      - name: Verify that test runner can communicate with Tugboat via shell
        run: tugboat shell ${{ github.event.inputs.service }} command="vendor/drush/drush/drush status"

      - name: Change playwright.atk.config.js
        run: |
          set -x
          sed -i '/tugboat/{n;s/isTarget: false/isTarget: true/}' playwright.atk.config.js
          sed -i 's/service: "<id>"/service: "${{ github.event.inputs.service }}"/g' playwright.atk.config.js
          echo "----playwright.atk.config.js----"
          cat playwright.atk.config.js

      - name: Change playwright.config.js
        run: |
          set -x
          sed -i -r "s/(\\/\\/[[:space:]]*)?baseURL: '.*'/baseURL: '"$(sed "s/\\//\\\\\\//g" <<< ${{ github.event.inputs.url }})"'/g" playwright.config.js
          echo "----playwright.config.js----"
          cat playwright.config.js

      - name: Run Playwright tests
        run: npx playwright test

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - run: echo "🍏 Job's status ${{ job.status }}."
