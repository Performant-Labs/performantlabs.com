name: Build and deploy artifact to Pantheon Dev.
run-name: ${{ github.actor }} is deploying to Pantheon Dev.
on: [push]

env:
  php_version: '8.1'
  pantheon_env: 'dev'
  pantheon_repo: ${{ secrets.PANTHEON_REPO }}
  pantheon_site_name: ${{ secrets.PANTHEON_SITE_NAME }}
  
jobs:
  Deploy-to-Dev:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v3
        
      - name: Set up PHP
        uses: shivammathur/setup-php@2.24.0
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          php-version: ${{ env.php_version }}
          
      # When dependencies are to be updated, remove the lock file.    
      #- name: Remove composer.lock
      #  run: rm composer.lock
        
      - name: Validate composer.json and composer.lock
        continue-on-error: true
        run: composer validate --strict        
        
      - name: Set Composer cache directory
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        
      - name: Cache Composer dependencies
        uses: actions/cache@v3.2.4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-        

      - name: Avoid GitHub rate limit for Composer
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
        
      #- name: Composer install
      #  run: composer install --no-dev --no-interaction
        
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2.5.0
        with:
          key: ${{ secrets.PANTHEON_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}   
          
      - run: ls ~/.ssh
      
      - name: Install Terminus
        run: |
          composer global require pantheon-systems/terminus:^3.1.3
          terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}
      
      - name: List the directories in the project
        run: tree -d -L 3
        
      - run: echo "üçè Job's status ${{ job.status }}."
