name: Run Cypress tests.
run-name: ${{ github.actor }} is running Cypress.
#on: workflow_dispatch
on: 
  [push]
  
env:
  php_version: '8.1'
  pantheon_site_name: 'performant-labs'
  pantheon_env: 'dev'
  local_db: "mysql://root:root@mysql:3306/drupal"
  local_base_url: "http://127.0.0.1:8080"
  db_database: drupal
  db_user: root
  db_password: root
  
jobs:
  Run-Cypress-Tests-Locally:
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "For site $pantheon_site_name.$pantheon_env."
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      
      #- name: Unix tools setup.
      #  run: |
      
      - name: Start mysql.
        run: |
          sudo /etc/init.d/mysql start
          #mysql -e 'CREATE DATABASE ${{ env.db_database }};' -u${{ env.db_user }} -p${{ env.db_password }}
          systemctl status mysql

      - name: Check out repository code.
        uses: actions/checkout@v3
                  
      - name: Import database
        run: |
          gunzip project/database/performant-labs_dev.sql.gz
          mysql -hlocalhost -u${{ env.db_user }} -p${{ env.db_password }} -e "CREATE DATABASE ${{ env.db_database }};"
          mysql -hlocalhost -u${{ env.db_user }} -p${{ env.db_password }} ${{ env.db_database }} < project/database/performant-labs_dev.sql      
        
      - name: Set up PHP.
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with: 
          php-version: ${{ env.php_version }}
          
      - name: Checkout.
        uses: actions/checkout@v3
        
      - name: Set Composer cache directory.
        id: composer-cache-dir
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        
      - name: Cache Composer dependencies.
        uses: actions/cache@v3.2.4
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-    
            
      - name: Avoid GitHub rate limit for Composer.
        run: composer config -g github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
        
      - name: Install Composer.
        run: composer install --optimize-autoloader --no-dev --prefer-dist --no-interaction --no-progress

      #- name: List the directories in the project.
      #  run: |
      #    tree -d -L 3
          
      - name: Copy settings.github.php to settings.local.php
        run: cp web/sites/default/settings.github.php web/sites/default/settings.local.php
        
      - name: Test drush.
        run: |
          pwd
          vendor/bin/drush status
          
      # See: https://www.drush.org/latest/commands/runserver/
      - name: Start Drush webserver.
        run: |
          # Hide all output and errors.
          # vendor/bin/drush runserver $local_base_url > /dev/null 2>&1 &
          vendor/bin/drush -vvv runserver $local_base_url &

          # Wait for drush server to start.
          for i in {1..5}; do \
            RESPONSE_CODE=$(curl -s -o /dev/null \
            -w "%{http_code}" "$local_base_url" || true); \
            if [ "$RESPONSE_CODE" -gt "301" ] || [ "$RESPONSE_CODE" -lt "200" ]; \
            then sleep 2; fi; done
            
      - name: Run Cypress tests.
        uses: cypress-io/github-action@v5
        with:
          config-file: cypress-github.config.js
          
      - name: Save the screenshots and videos.
        uses: actions/upload-artifact@v3
        if: failure()
        with:
         name: cypress-screenshots
         path: ./cypress/screenshots
         
      # The videos may be saved only if they fail. See the "after:spec" in the
      # configuration file.
      - name: Save the videos.
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: ./cypress/videos
        
        
